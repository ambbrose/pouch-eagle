// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

enum PhoneModel {
  iphonex
  iphone11
  iphone12
  iphone13
  iphone14
  iphone15
}

enum CaseMaterial {
  silicone
  polycarbonate
}

enum CaseFinish {
  smooth
  textured
}

enum PouchColor {
  black
  neutral
  blue
  rose
  green
  fuchsia
}

model Configuration {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  width    Int
  height   Int
  imageUrl String @db.String

  color           PouchColor?
  model           PhoneModel?
  material        CaseMaterial?
  finish          CaseFinish?
  croppedImageUrl String?       @db.String

  order Order[]
}

model User {
  id    String  @id @default(cuid()) @map("_id")
  email String  @db.String
  Order Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  configurationId String        @db.ObjectId
  configuration   Configuration @relation(fields: [configurationId], references: [id])

  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  amount Float
  isPaid Boolean     @default(false)
  status OrderStatus @default(awaiting_shipment)

  shippingAdressId String?         @db.ObjectId
  shippingAdress   ShippingAdress? @relation(fields: [shippingAdressId], references: [id])

  billingAddressId String?         @db.ObjectId
  billingAdress    BillingAddress? @relation(fields: [billingAddressId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShippingAdress {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String  @db.String
  street      String  @db.String
  city        String  @db.String
  postalCode  String  @db.String
  country     String  @db.String
  state       String? @db.String
  phoneNumber String? @db.String
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String  @db.String
  street      String  @db.String
  city        String  @db.String
  postalCode  String  @db.String
  country     String  @db.String
  state       String? @db.String
  phoneNumber String? @db.String
  orders      Order[]
}
